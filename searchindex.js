Search.setIndex({"docnames": ["index", "src/EduCDM", "src/EduCDM.KaNCD", "src/EduCDM.NCDM", "src/modules"], "filenames": ["index.rst", "src/EduCDM.rst", "src/EduCDM.KaNCD.rst", "src/EduCDM.NCDM.rst", "src/modules.rst"], "titles": ["Welcome to docs\u2019s documentation!", "EduCDM package", "EduCDM.KaNCD package", "EduCDM.NCDM package", "EduCDM"], "terms": {"index": [0, 1], "modul": [0, 4], "search": 0, "page": 0, "kancd": [1, 4], "poslinear": [1, 2, 3], "forward": [1, 2, 3], "in_featur": [1, 2, 3], "out_featur": [1, 2, 3], "weight": [1, 2, 3], "net": [1, 2, 3], "train": [1, 2, 3, 4], "transform__": [1, 2, 3], "fit": [1, 2, 3, 4], "predict_proba": [1, 2, 3, 4], "predict": [1, 2, 3, 4], "eval": [1, 2, 3], "save": [1, 2, 3, 4], "load": [1, 2, 3, 4], "ncdm": [1, 2, 4], "etl": [1, 4], "arg": 1, "kwarg": 1, "extract": 1, "transform": 1, "evalu": [1, 4], "class": [1, 2, 3], "cdm": [1, 2, 3, 4], "base": [1, 2, 3], "object": [1, 2, 3], "none": [1, 2, 3], "datafram": [1, 2, 3], "re_index": [1, 4], "meta_data": [1, 2, 3], "reindex": 1, "valu": 1, "continu": 1, "posit": 1, "integ": 1, "start": 1, "from": [1, 2, 3], "0": [1, 2, 3], "paramet": [1, 2, 3], "dict": [1, 2, 3], "return": [1, 2, 3], "tupl": [1, 2, 3], "ret_val2index": 1, "ret_index2v": 1, "two": [1, 2], "dictionari": [1, 2, 3], "same": [1, 2, 3], "kei": 1, "where": [1, 2, 3], "replac": 1, "origin": 1, "map": 1, "new": 1, "store": 1, "revers": 1, "int": [2, 3], "bia": [2, 3], "bool": [2, 3], "true": [2, 3], "devic": [2, 3], "dtype": [2, 3], "linear": [2, 3], "input": [2, 3], "tensor": [2, 3], "defin": [2, 3], "comput": [2, 3], "perform": [2, 3], "everi": [2, 3], "call": [2, 3], "should": [2, 3], "overridden": [2, 3], "all": [2, 3], "subclass": [2, 3], "although": [2, 3], "recip": [2, 3], "pass": [2, 3], "need": [2, 3], "within": [2, 3], "thi": [2, 3], "function": [2, 3], "one": [2, 3], "instanc": [2, 3], "afterward": [2, 3], "instead": [2, 3], "sinc": [2, 3], "former": [2, 3], "take": [2, 3], "care": [2, 3], "run": [2, 3], "regist": [2, 3], "hook": [2, 3], "while": [2, 3], "latter": [2, 3], "silent": [2, 3], "ignor": [2, 3], "them": [2, 3], "exer_n": [2, 3], "student_n": [2, 3], "knowledge_n": [2, 3], "mf_type": 2, "str": [2, 3], "dim": 2, "layer_dim1": 2, "layer_dim2": 2, "stu_id": [2, 3], "input_exercis": [2, 3], "input_knowledge_point": [2, 3], "40": 2, "gmf": 2, "512": [2, 3], "256": [2, 3], "The": [2, 3], "model": [2, 3], "param": 2, "contain": [2, 3], "userid": [2, 3], "itemid": [2, 3], "skill": [2, 3], "dimens": [2, 3], "latent": 2, "vector": 2, "user": [2, 3], "item": 2, "default": [2, 3], "type": 2, "layer": [2, 3], "": [2, 3], "us": [2, 3], "interact": 2, "among": 2, "mf": 2, "matrix": 2, "factor": 2, "just": 2, "inner": 2, "product": 2, "gener": 2, "i": [2, 3], "paper": 2, "ncf1": 2, "neural": 2, "collabor": 2, "filter": 2, "ncf2": 2, "first": [2, 3], "hidden": [2, 3], "second": [2, 3], "exampl": [2, 3], "001": [2, 3], "002": [2, 3], "003": [2, 3], "adf": [2, 3], "w5": [2, 3], "skill1": [2, 3], "skill2": [2, 3], "skill3": [2, 3], "skill4": [2, 3], "df_data": [2, 3], "batch_siz": [2, 3], "shuffl": [2, 3], "train_data": [2, 3], "epoch": [2, 3], "val_data": [2, 3], "cpu": [2, 3], "lr": [2, 3], "64": [2, 3], "If": [2, 3], "provid": [2, 3], "print": [2, 3], "auc": [2, 3], "accuraci": [2, 3], "after": [2, 3], "each": [2, 3], "respons": [2, 3], "number": [2, 3], "valid": [2, 3], "which": [2, 3], "you": [2, 3], "want": [2, 3], "your": [2, 3], "gpu": [2, 3], "e": [2, 3], "g": [2, 3], "cuda": [2, 3], "machin": [2, 3], "can": [2, 3], "chang": [2, 3], "learn": [2, 3], "rate": [2, 3], "batch": [2, 3], "size": [2, 3], "dure": [2, 3], "test_data": [2, 3], "output": [2, 3], "probabl": [2, 3], "would": [2, 3], "correct": [2, 3], "answer": [2, 3], "ar": [2, 3], "1": [2, 3], "test": [2, 3], "proba": [2, 3], "either": [2, 3], "float": [2, 3], "filepath": [2, 3], "method": [2, 3], "implement": [2, 3], "pytorch": [2, 3], "torch": [2, 3], "onli": [2, 3], "self": [2, 3], "ncdm_net": [2, 3], "whole": [2, 3], "pickl": [2, 3], "path": [2, 3], "befor": [2, 3], "properli": [2, 3], "initi": [2, 3], "dataset": [2, 3], "path_to_the_pr": [2, 3], "trained_model": [2, 3], "hidd_dim1": 3, "hidd_dim2": 3, "neuralcdm": 3, "packag": 4, "subpackag": 4, "submodul": 4, "content": 4, "meta": 4, "util": 4}, "objects": {"": [[1, 0, 0, "-", "EduCDM"]], "EduCDM": [[2, 0, 0, "-", "KaNCD"], [3, 0, 0, "-", "NCDM"], [1, 0, 0, "-", "meta"], [1, 0, 0, "-", "utils"]], "EduCDM.KaNCD": [[2, 0, 0, "-", "KaNCD"]], "EduCDM.KaNCD.KaNCD": [[2, 1, 1, "", "KaNCD"], [2, 1, 1, "", "Net"], [2, 1, 1, "", "PosLinear"]], "EduCDM.KaNCD.KaNCD.KaNCD": [[2, 2, 1, "", "eval"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "load"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "predict_proba"], [2, 2, 1, "", "save"], [2, 2, 1, "", "transform__"]], "EduCDM.KaNCD.KaNCD.Net": [[2, 2, 1, "", "forward"], [2, 3, 1, "", "training"]], "EduCDM.KaNCD.KaNCD.PosLinear": [[2, 2, 1, "", "forward"], [2, 3, 1, "", "in_features"], [2, 3, 1, "", "out_features"], [2, 3, 1, "", "weight"]], "EduCDM.NCDM": [[3, 0, 0, "-", "NCDM"]], "EduCDM.NCDM.NCDM": [[3, 1, 1, "", "NCDM"], [3, 1, 1, "", "Net"], [3, 1, 1, "", "PosLinear"]], "EduCDM.NCDM.NCDM.NCDM": [[3, 2, 1, "", "eval"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "load"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "predict_proba"], [3, 2, 1, "", "save"], [3, 2, 1, "", "transform__"]], "EduCDM.NCDM.NCDM.Net": [[3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "EduCDM.NCDM.NCDM.PosLinear": [[3, 2, 1, "", "forward"], [3, 3, 1, "", "in_features"], [3, 3, 1, "", "out_features"], [3, 3, 1, "", "weight"]], "EduCDM.meta": [[1, 1, 1, "", "CDM"], [1, 4, 1, "", "etl"], [1, 4, 1, "", "evaluate"], [1, 4, 1, "", "train"]], "EduCDM.meta.CDM": [[1, 2, 1, "", "fit"], [1, 2, 1, "", "load"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "predict_proba"], [1, 2, 1, "", "save"]], "EduCDM.utils": [[1, 4, 1, "", "re_index"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "doc": 0, "": 0, "document": 0, "indic": 0, "tabl": 0, "educdm": [1, 2, 3, 4], "packag": [1, 2, 3], "subpackag": 1, "submodul": [1, 2, 3], "meta": 1, "modul": [1, 2, 3], "util": 1, "content": [1, 2, 3], "kancd": 2, "ncdm": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to docs\u2019s documentation!": [[0, "welcome-to-docs-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "EduCDM package": [[1, "educdm-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "EduCDM.meta module": [[1, "module-EduCDM.meta"]], "EduCDM.utils module": [[1, "module-EduCDM.utils"]], "Module contents": [[1, "module-EduCDM"], [2, "module-EduCDM.KaNCD"], [3, "module-EduCDM.NCDM"]], "EduCDM.KaNCD package": [[2, "educdm-kancd-package"]], "EduCDM.KaNCD.KaNCD module": [[2, "module-EduCDM.KaNCD.KaNCD"]], "EduCDM.NCDM package": [[3, "educdm-ncdm-package"]], "EduCDM.NCDM.NCDM module": [[3, "module-EduCDM.NCDM.NCDM"]], "EduCDM": [[4, "educdm"]]}, "indexentries": {"cdm (class in educdm.meta)": [[1, "EduCDM.meta.CDM"]], "educdm": [[1, "module-EduCDM"]], "educdm.meta": [[1, "module-EduCDM.meta"]], "educdm.utils": [[1, "module-EduCDM.utils"]], "etl() (in module educdm.meta)": [[1, "EduCDM.meta.etl"]], "evaluate() (in module educdm.meta)": [[1, "EduCDM.meta.evaluate"]], "fit() (educdm.meta.cdm method)": [[1, "EduCDM.meta.CDM.fit"]], "load() (educdm.meta.cdm method)": [[1, "EduCDM.meta.CDM.load"]], "module": [[1, "module-EduCDM"], [1, "module-EduCDM.meta"], [1, "module-EduCDM.utils"], [2, "module-EduCDM.KaNCD"], [2, "module-EduCDM.KaNCD.KaNCD"], [3, "module-EduCDM.NCDM"], [3, "module-EduCDM.NCDM.NCDM"]], "predict() (educdm.meta.cdm method)": [[1, "EduCDM.meta.CDM.predict"]], "predict_proba() (educdm.meta.cdm method)": [[1, "EduCDM.meta.CDM.predict_proba"]], "re_index() (in module educdm.utils)": [[1, "EduCDM.utils.re_index"]], "save() (educdm.meta.cdm method)": [[1, "EduCDM.meta.CDM.save"]], "train() (in module educdm.meta)": [[1, "EduCDM.meta.train"]], "educdm.kancd": [[2, "module-EduCDM.KaNCD"]], "educdm.kancd.kancd": [[2, "module-EduCDM.KaNCD.KaNCD"]], "kancd (class in educdm.kancd.kancd)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD"]], "net (class in educdm.kancd.kancd)": [[2, "EduCDM.KaNCD.KaNCD.Net"]], "poslinear (class in educdm.kancd.kancd)": [[2, "EduCDM.KaNCD.KaNCD.PosLinear"]], "eval() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.eval"]], "fit() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.fit"]], "forward() (educdm.kancd.kancd.net method)": [[2, "EduCDM.KaNCD.KaNCD.Net.forward"]], "forward() (educdm.kancd.kancd.poslinear method)": [[2, "EduCDM.KaNCD.KaNCD.PosLinear.forward"]], "in_features (educdm.kancd.kancd.poslinear attribute)": [[2, "EduCDM.KaNCD.KaNCD.PosLinear.in_features"]], "load() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.load"]], "out_features (educdm.kancd.kancd.poslinear attribute)": [[2, "EduCDM.KaNCD.KaNCD.PosLinear.out_features"]], "predict() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.predict"]], "predict_proba() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.predict_proba"]], "save() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.save"]], "training (educdm.kancd.kancd.net attribute)": [[2, "EduCDM.KaNCD.KaNCD.Net.training"]], "transform__() (educdm.kancd.kancd.kancd method)": [[2, "EduCDM.KaNCD.KaNCD.KaNCD.transform__"]], "weight (educdm.kancd.kancd.poslinear attribute)": [[2, "EduCDM.KaNCD.KaNCD.PosLinear.weight"]], "educdm.ncdm": [[3, "module-EduCDM.NCDM"]], "educdm.ncdm.ncdm": [[3, "module-EduCDM.NCDM.NCDM"]], "ncdm (class in educdm.ncdm.ncdm)": [[3, "EduCDM.NCDM.NCDM.NCDM"]], "net (class in educdm.ncdm.ncdm)": [[3, "EduCDM.NCDM.NCDM.Net"]], "poslinear (class in educdm.ncdm.ncdm)": [[3, "EduCDM.NCDM.NCDM.PosLinear"]], "eval() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.eval"]], "fit() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.fit"]], "forward() (educdm.ncdm.ncdm.net method)": [[3, "EduCDM.NCDM.NCDM.Net.forward"]], "forward() (educdm.ncdm.ncdm.poslinear method)": [[3, "EduCDM.NCDM.NCDM.PosLinear.forward"]], "in_features (educdm.ncdm.ncdm.poslinear attribute)": [[3, "EduCDM.NCDM.NCDM.PosLinear.in_features"]], "load() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.load"]], "out_features (educdm.ncdm.ncdm.poslinear attribute)": [[3, "EduCDM.NCDM.NCDM.PosLinear.out_features"]], "predict() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.predict"]], "predict_proba() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.predict_proba"]], "save() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.save"]], "training (educdm.ncdm.ncdm.net attribute)": [[3, "EduCDM.NCDM.NCDM.Net.training"]], "transform__() (educdm.ncdm.ncdm.ncdm method)": [[3, "EduCDM.NCDM.NCDM.NCDM.transform__"]], "weight (educdm.ncdm.ncdm.poslinear attribute)": [[3, "EduCDM.NCDM.NCDM.PosLinear.weight"]]}})